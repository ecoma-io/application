name: Intergration

on:
  push:
    branches:
      - main
      - dev

  pull_request_target:
    branches:
      - main
      - dev

  merge_group:
    branches:
      - main
      - dev
env:
  NX_CLOUD_ACCESS_TOKEN: ${{ secrets.NX_CLOUD_ACCESS_TOKEN }}
  GITHUB_SHA: ${{ github.sha }}
  GITHUB_HEAD_REF: ${{ github.head_ref }}
  GITHUB_BASE_REF: ${{ github.base_ref }}
permissions:
  contents: write
  pull-requests: write
jobs:
  validation:
    name: Code quality validation
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@85e6279cec87321a52edac9c87bce653a07cf6c2
        with:
          fetch-depth: 0
          filter: tree:0

      - name: Setup project
        uses: ./.github/actions/setup



      - name: Determine Nx Affected Base and Head
        id: nx-affected-vars
        run: |
          # Default to origin/main and current commit for push events
          BASE="origin/main"
          HEAD="$GITHUB_SHA"

          # For pull_request_target, use the base branch of the PR
          if [ "${{ github.event_name }}" == "pull_request_target" ]; then
            BASE="origin/$GITHUB_BASE_REF"
            HEAD="origin/$GITHUB_HEAD_REF" # Or $GITHUB_SHA if you want the last commit of the source branch PR
            echo "Running on pull_request_target. Base: $BASE, Head: $HEAD"
          fi

          # For merge_group, the base is the merge group ref and head is the current commit
          if [ "${{ github.event_name }}" == "merge_group" ]; then
            BASE="$GITHUB_BASE_REF" # Usually the target branch (main or dev) before merging
            HEAD="$GITHUB_SHA" # Commit of the merge group
            echo "Running on merge_group. Base: $BASE, Head: $HEAD"
          fi

          echo "NX_AFFECTED_BASE=$BASE" >> $GITHUB_ENV
          echo "NX_AFFECTED_HEAD=$HEAD" >> $GITHUB_ENV

      - name: Run lint projects
        run: npx nx affected --targets=lint --base=$NX_AFFECTED_BASE --head=$NX_AFFECTED_HEAD --parallel 12

      - name: Run unit tests
        run: npx nx affected --targets=test --base=$NX_AFFECTED_BASE --head=$NX_AFFECTED_HEAD --parallel 8

      - name: Run build
        run: npx nx affected --targets=build --base=$NX_AFFECTED_BASE --head=$NX_AFFECTED_HEAD --parallel 8

  automation-test:
    name: Automation Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@85e6279cec87321a52edac9c87bce653a07cf6c2
        with:
          fetch-depth: 0
          filter: tree:0

      - name: Setup project
        uses: ./.github/actions/setup
        with:
          run-playwright-install: true

      - name: Run containerize docker images
        run: npx nx affected --targets=containerize --base=origin/main --head=$GITHUB_SHA --parallel 1

      - name: Automate Integration
        run: npx nx affected --target=automate-integration-test --base=origin/main --head=$GITHUB_SHA --parallel 1

      - name: Automate E2E Test
        run: npx nx affected --target=automate-e2e-test --base=origin/main --head=$GITHUB_SHA --parallel 1

  release:
    name: Release
    needs: [validation, automation-test]
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@85e6279cec87321a52edac9c87bce653a07cf6c2

      - uses: googleapis/release-please-action@a02a34c4d625f9be7cb89156071d8567266a2445 # v4
        id: release-please
        with:
          token: ${{ secrets.GH_BOT_TOKEN }}
          config-file: release.config.json
          manifest-file: release.manifest.json
